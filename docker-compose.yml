version: '3.8'
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    expose:
      - "8080"
    volumes:
      - ./backend:/app
    tty: true
    networks:
      - my-network
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    expose:
      - "3000"
    volumes:
      - ./frontend:/app
    tty: true
    networks:
      - my-network
  database:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: wlpostgresql
    env_file:
      - .env
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    ports:
      - 5432:5432
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: db_pgadmin
    env_file:
      - .env
    volumes:
      - pgadmindata:/var/lib/pgadmin4/storage
    environment:
      PGADMIN_DEFAULT_EMAIL: $PGADMIN_DEFAULT_EMAIL
      PGADMIN_DEFAULT_PASSWORD: $PGADMIN_DEFAULT_PASSWORD
      TZ: Asia/Tokyo
    depends_on:
      - database
    ports:
      - "5050:80"
  reverse-proxy:
    build:
      context: ./reverse-proxy
      dockerfile: Dockerfile
    ports:
      - 80:80
    depends_on:
      - backend
      - frontend
    networks:
      - my-network
volumes:
  postgres_data:
  pgadmindata:
networks:
  my-network:
    driver: bridge