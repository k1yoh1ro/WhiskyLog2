version: '3.8'
services:
  backend:
    build: ./backend
    container_name: backend
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/workspace
    env_file:
      - .env
    networks:
      - my-network
    depends_on:
      - database
    tty: true
  frontend:
    build:  ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/workspace
    env_file:
      - .env
    networks:
      - my-network
    tty: true
  database:
    build: ./database
    container_name: database
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    env_file:
      - .env
    ports:
      - 5432:5432
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: db_pgadmin
    env_file:
      - .env
    volumes:
      - pgadmindata:/var/lib/pgadmin4/storage
    environment:
      PGADMIN_DEFAULT_EMAIL: $PGADMIN_DEFAULT_EMAIL
      PGADMIN_DEFAULT_PASSWORD: $PGADMIN_DEFAULT_PASSWORD
      TZ: Asia/Tokyo
    depends_on:
      - database
    ports:
      - "5050:80"
  reverse-proxy:
    build: ./reverse-proxy
    container_name: reverse-proxy
    ports:
      - 80:80
    networks:
      - my-network
    depends_on:
      - backend
      - frontend
networks:
  my-network:
    driver: bridge
volumes:
  postgres_data:
  pgadmindata: